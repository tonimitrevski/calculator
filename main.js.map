{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/components/calculator/calculator.component.ts","./src/components/calculator/calculator.component.html","./src/components/calculator/calculator.module.ts","./src/components/calculator/shared/add-expression/add-expression.service.ts","./src/components/calculator/shared/calculate/calculate.service.ts","./src/components/calculator/shared/get-random-number/get-random-number.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<div class=\"home-page\">\n  <h1>Please make your calculations bellow</h1>\n  <app-calculator></app-calculator>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport {CalculatorModule} from '../components/calculator/calculator.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    CalculatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport {CalculateService} from './shared/calculate/calculate.service';\nimport {AddExpressionService} from './shared/add-expression/add-expression.service';\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.scss']\n})\nexport class CalculatorComponent {\n  expression = '';\n  private lastChar: string;\n  private readonly removeExpressionChar = 'C';\n  private readonly calculateExpressionChar = '=';\n  private restartExpression = false;\n\n  onClick(e: HTMLElement): void {\n    const classList: DOMTokenList = e.classList;\n\n    if (!classList.contains('calculator_btn')) {\n      return;\n    }\n\n    const currentChar: string = e.innerText;\n\n    if (currentChar === this.removeExpressionChar) {\n      this.restartExpressionImplementation();\n      return;\n    }\n\n    if (this.restartExpression) {\n      this.restartExpressionImplementation();\n      this.restartExpression = false;\n    }\n\n    if (currentChar === this.calculateExpressionChar) {\n      this.expression = CalculateService.execute(this.expression);\n      this.restartExpression = true;\n      return;\n    }\n\n    this.expression = AddExpressionService.execute(this.expression, currentChar, this.lastChar);\n    this.lastChar = currentChar;\n  }\n\n  private restartExpressionImplementation(): void {\n    this.expression = '';\n  }\n}\n","\n<div class=\"calculator\">\n    <div class=\"calculator__input\">{{expression}}</div>\n    <div class=\"calculator__buttons\" (click)=\"onClick($event.target)\">\n      <div class=\"calculator__buttons__operators\">\n        <div class=\"calculator_btn calculator__buttons__operators__btn\">+</div>\n        <div class=\"calculator_btn calculator__buttons__operators__btn\">-</div>\n        <div class=\"calculator_btn calculator__buttons__operators__btn\">&times;</div>\n        <div class=\"calculator_btn calculator__buttons__operators__btn\">&divide;</div>\n      </div>\n      <div class=\"calculator__buttons__operators\">\n        <div class=\"calculator__buttons__operators__btn\">sin</div>\n        <div class=\"calculator__buttons__operators__btn\">cos</div>\n        <div class=\"calculator__buttons__operators__btn\">tan</div>\n        <div class=\"calculator__buttons__operators__btn\">2</div>\n      </div>\n      <div class=\"calculator__buttons__main\">\n        <div class=\"calculator__buttons__main__numbers\">\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\">7</div>\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\">8</div>\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\">9</div>\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\">4</div>\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\">5</div>\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\">6</div>\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\">1</div>\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\">2</div>\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\">3</div>\n            <div class=\"calculator__buttons__main__numbers__nb random\">Rand</div>\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\">0</div>\n            <div class=\"calculator_btn calculator__buttons__main__numbers__nb\" id=\"clear\">C</div>\n        </div>\n        <div class=\"calculator_btn calculator__buttons__main__equal\" id=\"result\">=</div>\n      </div>\n    </div>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalculatorComponent } from './calculator.component';\nimport {GetRandomNumberService} from './shared/get-random-number/get-random-number.service';\n\n@NgModule({\n  declarations: [CalculatorComponent],\n  imports: [CommonModule],\n  providers: [GetRandomNumberService],\n  exports: [CalculatorComponent]\n})\nexport class CalculatorModule { }\n","\nexport class AddExpressionService {\n  private static readonly operators: Array<string> = ['+', '-', '×', '÷'];\n\n  public static execute(expression: string, currentChar: string, lastChar: string): string {\n    if (!expression && this.operators.includes(currentChar)) {\n      return expression;\n    }\n\n    if (this.operators.includes(currentChar) && this.operators.includes(lastChar)) {\n      expression = expression.substring(0, expression.length - 1) + currentChar;\n      return expression;\n    }\n\n    expression = expression += currentChar;\n    return expression;\n  }\n}\n","export class CalculateService {\n  public static execute(inputString: string): string {\n\n    // forming an array of numbers. eg for above string it will be: numbers = ['10', '26', '33', '56', '34', '23']\n    const numbers: Array<string> = inputString.split(/\\+|\\-|\\×|\\÷/g);\n\n    // forming an array of operators. for above string it will be: operators = ['+', '+', '-', '*', '/']\n    // first we replace all the numbers and dot with empty string and then split\n    const operators: Array<string> = inputString.replace(/[0-9]|\\./g, '').split('');\n\n    this.divideOperation(operators, numbers);\n    this.multiplyOperation(operators, numbers);\n    this.subtractOperation(operators, numbers);\n    this.addOperation(operators, numbers);\n    return numbers[0];\n  }\n\n  private static addOperation(operators: string[], numbers: string[]): void {\n    let add = operators.indexOf('+');\n    while (add !== -1) {\n      // using parseFloat is necessary, otherwise it will result in string concatenation :)\n      numbers.splice(add, 2, String(parseFloat(numbers[add]) + parseFloat(numbers[add + 1])));\n      operators.splice(add, 1);\n      add = operators.indexOf('+');\n    }\n  }\n\n  private static subtractOperation(operators: string[], numbers: string[]): void {\n    let subtract = operators.indexOf('-');\n    while (subtract !== -1) {\n      numbers.splice(subtract, 2, String(parseFloat(numbers[subtract]) - parseFloat(numbers[subtract + 1])));\n      operators.splice(subtract, 1);\n      subtract = operators.indexOf('-');\n    }\n  }\n\n  private static multiplyOperation(operators: string[], numbers: string[]): void {\n    let multiply = operators.indexOf('×');\n    while (multiply !== -1) {\n      numbers.splice(multiply, 2, String(parseFloat(numbers[multiply]) * parseFloat(numbers[multiply + 1])));\n      operators.splice(multiply, 1);\n      multiply = operators.indexOf('×');\n    }\n  }\n\n  private static divideOperation(operators: string[], numbers: string[]): void {\n    let divide = operators.indexOf('÷');\n    while (divide !== -1) {\n      numbers.splice(divide, 2, String(parseFloat(numbers[divide]) / parseFloat(numbers[divide + 1])));\n      operators.splice(divide, 1);\n      divide = operators.indexOf('÷');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GetRandomNumberService {\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}